<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ward Word Fill-in-the-Blank Game</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f4f8;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            padding: 1rem;
        }
        .container {
            background-color: #ffffff;
            border-radius: 1.5rem;
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 5px 15px -5px rgba(0, 0, 0, 0.04);
            padding: 2rem;
            text-align: center;
            max-width: 90%;
            width: 600px;
        }
        #question-box {
            background-color: #f8fafc;
            border-radius: 1rem;
            padding: 2rem;
            min-height: 150px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            font-size: 1.25rem;
            line-height: 1.8;
            color: #334155;
            margin-bottom: 1.5rem;
        }
        #options-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }
        .option-button {
            padding: 1rem;
            font-size: 1rem;
            font-weight: bold;
            border-radius: 0.75rem;
            background-color: #d1d5db;
            color: #4b5563;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        .option-button:hover {
            background-color: #9ca3af;
        }
        .option-button.correct {
            background-color: #10b981;
            color: white;
        }
        .option-button.incorrect {
            background-color: #ef4444;
            color: white;
        }
        .feedback {
            font-size: 1.2rem;
            font-weight: bold;
            margin-top: 1rem;
            min-height: 24px;
        }
    </style>
</head>
<body class="bg-gray-100">

    <div class="container">
        <h1 class="text-3xl md:text-4xl font-bold text-gray-800 mb-2">Ward Word Fill-in-the-Blank</h1>
        <p class="text-gray-600 mb-6">Choose the correct word to complete the sentence.</p>
        
        <div id="question-box">
            <span id="question-text"></span>
        </div>
        
        <div id="options-container"></div>
        
        <div id="feedback" class="feedback"></div>

        <button id="next-button" class="mt-6 px-6 py-3 bg-indigo-600 text-white font-bold rounded-full shadow-lg hover:bg-indigo-700 transition duration-300 transform hover:scale-105" style="display: none;">
            Next
        </button>
        <button id="restart-button" class="mt-6 px-6 py-3 bg-indigo-600 text-white font-bold rounded-full shadow-lg hover:bg-indigo-700 transition duration-300 transform hover:scale-105" style="display: none;">
            Restart
        </button>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const questions = [
                { word: 'forward', sentence: 'We must keep moving ______ to achieve our goals.' },
                { word: 'backward', sentence: 'The car slowly backed ______ out of the driveway.' },
                { word: 'award', sentence: 'He received a science ______ for his new invention.' },
                { word: 'reward', sentence: 'The company gave a cash ______ to the top-performing employees.' },
                { word: 'upward', sentence: 'The balloon floated ______ towards the sky.' },
                { word: 'downward', sentence: 'The stock price has shown a ______ trend over the past month.' },
                { word: 'toward', sentence: 'Please walk ______ the library.' },
                { word: 'wardrobe', sentence: 'Her room has a huge ______ filled with clothes.' }
            ];

            const questionTextElement = document.getElementById('question-text');
            const optionsContainer = document.getElementById('options-container');
            const feedbackElement = document.getElementById('feedback');
            const nextButton = document.getElementById('next-button');
            const restartButton = document.getElementById('restart-button');

            let shuffledQuestions = [];
            let currentQuestionIndex = 0;

            function shuffle(array) {
                for (let i = array.length - 1; i > 0; i--) {
                    const j = Math.floor(Math.random() * (i + 1));
                    [array[i], array[j]] = [array[j], array[i]];
                }
            }

            function startNewGame() {
                shuffledQuestions = [...questions];
                shuffle(shuffledQuestions);
                currentQuestionIndex = 0;
                displayQuestion();
                nextButton.style.display = 'none';
                restartButton.style.display = 'none';
                feedbackElement.textContent = '';
            }

            function displayQuestion() {
                if (currentQuestionIndex >= shuffledQuestions.length) {
                    endGame();
                    return;
                }

                const currentQuestion = shuffledQuestions[currentQuestionIndex];
                questionTextElement.textContent = currentQuestion.sentence.replace('______', '__________');
                optionsContainer.innerHTML = '';
                feedbackElement.textContent = '';
                
                const options = getOptions(currentQuestion.word);
                shuffle(options);
                
                options.forEach(option => {
                    const button = document.createElement('button');
                    button.classList.add('option-button');
                    button.textContent = option;
                    button.addEventListener('click', () => handleAnswer(option, currentQuestion.word));
                    optionsContainer.appendChild(button);
                });
            }

            function getOptions(correctWord) {
                // Get all words except the correct answer
                const otherWords = questions.map(q => q.word).filter(word => word !== correctWord);
                shuffle(otherWords);
                
                // Select three different incorrect answers
                const incorrectOptions = otherWords.slice(0, 3);
                
                // Combine the correct answer and incorrect answers
                return [correctWord, ...incorrectOptions];
            }

            function handleAnswer(selectedOption, correctWord) {
                const buttons = optionsContainer.querySelectorAll('.option-button');
                
                buttons.forEach(button => {
                    button.disabled = true;
                    if (button.textContent === correctWord) {
                        button.classList.add('correct');
                    }
                    if (button.textContent === selectedOption && selectedOption !== correctWord) {
                        button.classList.add('incorrect');
                    }
                });

                if (selectedOption === correctWord) {
                    feedbackElement.textContent = 'Correct!';
                    feedbackElement.style.color = '#10b981';
                } else {
                    feedbackElement.textContent = 'Incorrect. The correct answer is ' + correctWord + '.';
                    feedbackElement.style.color = '#ef4444';
                }

                nextButton.style.display = 'block';
            }

            function endGame() {
                questionTextElement.textContent = 'Congratulations, you\'ve completed all the questions!';
                optionsContainer.innerHTML = '';
                feedbackElement.textContent = '';
                nextButton.style.display = 'none';
                restartButton.style.display = 'block';
            }

            nextButton.addEventListener('click', () => {
                currentQuestionIndex++;
                displayQuestion();
            });

            restartButton.addEventListener('click', startNewGame);
            
            startNewGame();
        });
    </script>
</body>
</html>
